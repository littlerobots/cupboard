apply plugin: 'maven'
apply plugin: 'signing'

def isReleaseBuild() {
    return !version.contains("SNAPSHOT")
}

def sonatypeRepositoryUrl

if (isReleaseBuild()) {
    println 'RELEASE BUILD'
    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else {
    println 'DEBUG BUILD'
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
}

ext {
    nexusUsername = ext.has('nexusUsername') ? ext.nexusUsername : 'not-set'
    nexusPassword = ext.has('nexusPassword') ? ext.nexusPassword : 'not-set'
}

afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { deployment -> signing.signPom(deployment) }

                pom.artifactId = POM_ARTIFACT_ID
                pom.packaging = POM_PACKAGING

                repository(url: sonatypeRepositoryUrl) {
                    authentication(userName: nexusUsername, password: nexusPassword)
                }

                pom.project {
                    parent {
                        groupId = "org.sonatype.oss"
                        artifactId = "oss-parent"
                        version = "7"
                    }

                    name POM_NAME
                    packaging POM_PACKAGING
                    description POM_DESCRIPTION
                    url POM_URL

                    scm {
                        url POM_SCM_URL
                        connection POM_SCM_CONNECTION
                    }

                    licenses {
                        license {
                            name POM_LICENCE_NAME
                            url POM_LICENCE_URL
                            distribution POM_LICENCE_DIST
                        }
                    }

                    developers {
                        developer {
                            id POM_DEVELOPER_ID
                            name POM_DEVELOPER_NAME
                        }
                    }

                    dependencies {
                        dependency {
                            groupId "com.google.android"
                            artifactId "android"
                            version "2.2.1"
                            scope "provided"
                        }
                    }
                }
            }
        }
    }

    signing {
        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    task androidJavadocs(type: Javadoc) {
        source = android.sourceSets.main.java
        exclude '**/internal/**'
    }

    task androidJavadocsJar(type: Jar) {
        classifier = 'javadoc'
        from androidJavadocs.outputs
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java
    }
    // package both aar and jar
    artifacts {
        archives packageReleaseJar
        archives androidSourcesJar
        archives androidJavadocsJar
    }
}